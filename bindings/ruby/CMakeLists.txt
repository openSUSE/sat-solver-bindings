#ADD_SUBDIRECTORY(tests)

MESSAGE(STATUS "Ruby executable: ${RUBY_EXECUTABLE}")
MESSAGE(STATUS "Ruby vendor arch dir: ${RUBY_VENDORARCH_DIR}")
MESSAGE(STATUS "Ruby include path: ${RUBY_INCLUDE_PATH}")

SET( SWIG_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/libsatsolver_wrap.c" )
SET( SWIG_INPUT "${CMAKE_CURRENT_SOURCE_DIR}/satsolver.i" )

ADD_CUSTOM_COMMAND (
   OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/libsatsolver_wrap.c
   COMMAND ${CMAKE_COMMAND} -E echo_append "Creating wrapper code for Ruby..."
   COMMAND ${SWIG_EXECUTABLE} -ruby -features autodoc -autorename -o ${CMAKE_CURRENT_BINARY_DIR}/libsatsolver_wrap.c ${CMAKE_CURRENT_SOURCE_DIR}/../satsolver.i
   COMMAND ${CMAKE_COMMAND} -E echo "Done."
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../*.i
)

ADD_CUSTOM_TARGET( glue
   DEPENDS ${SWIG_OUTPUT}
)

SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall" )

SET(satsolverx_SRCS "${CMAKE_CURRENT_BINARY_DIR}/libsatsolver_wrap.c" "${CMAKE_SOURCE_DIR}/tools/repo_rpmdb.c" )
ADD_LIBRARY( satsolverx SHARED ${satsolverx_SRCS} )
SET_TARGET_PROPERTIES( satsolverx PROPERTIES PREFIX "" )
ADD_DEPENDENCIES( satsolverx glue )

INCLUDE_DIRECTORIES( ${RUBY_INCLUDE_PATH} ${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/applayer ${CMAKE_SOURCE_DIR}/tools )

TARGET_LINK_LIBRARIES( satsolverx satsolver )
TARGET_LINK_LIBRARIES( satsolverx appsatsolver )
TARGET_LINK_LIBRARIES( satsolverx ${RUBY_LIBRARY} )
TARGET_LINK_LIBRARIES( satsolverx ${DB43_LIBRARY} )

INSTALL(TARGETS satsolverx LIBRARY DESTINATION ${RUBY_VENDORARCH_DIR})
CONFIGURE_FILE(  ${CMAKE_CURRENT_SOURCE_DIR}/satsolver.rb  ${CMAKE_CURRENT_BINARY_DIR}/satsolver.rb COPYONLY )
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/satsolver.rb DESTINATION ${RUBY_VENDORLIB_DIR} )
